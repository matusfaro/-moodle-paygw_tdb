{"version":3,"sources":["../src/gateways_modal.js"],"names":["showPlaceholderModal","ModalFactory","Templates","render","large","body","create","modal","show","showModal","tdbconfig","getState","component","paymentArea","itemId","description","Repository","then","state","status","createRedirectUrl","url","location","href","Promise","process","placemodal","getForm","hide","showIFrame","data","merid","merchantid","PurchaseAmount","ReturnURLApprove","ReturnURLDecline","Currency","OrderID","VisualAmount","iframeId","uniqid","formId","append","postsrc","form","$","each","n","v","submit","remove","iframe","on","setTimeout","max","i"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is responsible for tdb content in the gateways modal.\n *\n * @module     paygw_tdb/gateway_modal\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport ModalFactory from 'core/modal_factory';\nimport * as Repository from './repository';\n\n/**\n * Creates and shows a modal that contains a placeholder.\n * @returns {Promise<Modal>}\n */\nconst showPlaceholderModal = async () => {\n    const modal = await ModalFactory.create({\n        large: true,\n        body: await Templates.render('paygw_tdb/tdb_iframe_placeholder', {})\n    });\n    modal.show();\n    return modal;\n};\n\n/**\n * Creates and shows a modal that contains a placeholder.\n * @param {object} tdbconfig\n * @returns {Promise<Modal>}\n */\nconst showModal = async (tdbconfig) => {\n    const modal = await ModalFactory.create({\n        large: true,\n        body: await Templates.render('paygw_tdb/tdb_iframe', tdbconfig)\n    });\n    modal.show();\n    return modal;\n};\n\n/**\n * Make Ajax call to get state, redirect if successful.\n *\n * @param {string} component\n * @param {string} paymentArea\n * @param {integer} itemId\n * @param {string} description\n * @returns {Promise<string>}\n */\nconst getState = (component, paymentArea, itemId, description) => {\n    return Repository.getState(component, paymentArea, itemId, description)\n        .then(state => {\n            if (state.status) {\n                return Repository.createRedirectUrl(component, paymentArea, itemId)\n                    .then(url => {\n                        location.href = url;\n                        // Return a promise that is never going to be resolved.\n                        return new Promise(() => null);\n                    });\n            }\n            return new Promise(() => null);\n        });\n};\n\n/**\n * Process the payment.\n *\n * @param {string} component Name of the component that the itemId belongs to\n * @param {string} paymentArea The area of the component that the itemId belongs to\n * @param {number} itemId An internal identifier that is used by the component\n * @param {string} description Description of the payment\n * @returns {Promise<string>}\n */\nexport const process = (component, paymentArea, itemId, description) => {\n    // This is a hack to get around linting. Promises are usually required to return\n    // But we are hacking the process js to inject a redirect so need to wait for that to occur.\n    return showPlaceholderModal()\n        .then(placemodal => {\n            return Repository.getForm(component, paymentArea, itemId, description)\n                .then(tdbconfig => {\n                    placemodal.hide();\n                    return showModal(tdbconfig)\n                        .then((modal) => {\n                            if (tdbconfig.showIFrame) {\n                                // Redirect IFrame to TDB\n                                const data = {\n                                    merid: tdbconfig.merchantid,\n                                    PurchaseAmount: tdbconfig.PurchaseAmount,\n                                    ReturnURLApprove: tdbconfig.ReturnURLApprove,\n                                    ReturnURLDecline: tdbconfig.ReturnURLDecline,\n                                    Currency: tdbconfig.Currency,\n                                    OrderID: tdbconfig.OrderID,\n                                    VisualAmount: tdbconfig.VisualAmount,\n                                };\n                                const iframeId = 'paygw-tdb-iframe-' + tdbconfig.uniqid;\n                                const formId = 'paygw-tdb-form-' + tdbconfig.uniqid;\n\n                                // Redirect IFrame via Form\n                                $('body').append(\n                                    '<form action=\"'\n                                    + tdbconfig.postsrc\n                                    + '\" method=\"post\" target=\"'\n                                    + iframeId\n                                    + '\" id=\"'\n                                    + formId\n                                    + '\"></form>');\n                                const form = $('#' + formId);\n                                $.each(data, function (n, v) {\n                                    form.append('<input type=\"hidden\" name=\"' + n + '\" value=\"' + v + '\" />');\n                                });\n                                form.submit().remove();\n\n                                // Detect IFrame redirecting and check status\n                                const iframe = $('#' + iframeId);\n                                iframe.on('load', function () {\n                                    setTimeout(function () {\n                                        getState(component, paymentArea, itemId, description);\n                                    }, 1000);\n                                });\n\n                                // Check status once in a while anyway\n                                let max = 100;\n                                for (var i = 0; i < max; i++) {\n                                    setTimeout(function () {\n                                        getState(component, paymentArea, itemId, description);\n                                    }, (i + i + 1) * 5000);\n                                }\n                                // Hide Modal when timing out.\n                                setTimeout(function () {\n                                    modal.hide();\n                                }, (max + max + 1) * 5000);\n                            }\n\n                            return new Promise(() => null);\n                        });\n                });\n        });\n};"],"file":"gateways_modal.min.js"}